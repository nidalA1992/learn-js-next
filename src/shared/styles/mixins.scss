@use "func";
@use "vars";
@use "sass:math";

/// Экспорт SCSS map в CSS variables
@mixin export-css-vars($map, $prefix) {
  :root {
    @each $name, $value in $map {
      --#{$prefix}-#{$name}: #{$value};
    }
  }
}

/* диапазон экрана */
$vw-min: 360px !default;
$vw-max: 1440px !default;

/* вспомогательный миксин для clamp */
@mixin fluid($min, $max, $from: $vw-min, $to: $vw-max) {
  @if $min == $max {
    font-size: $min;
  } @else {
    $slope: math.div(($max - $min), ($to - $from)) * 100;
    $intercept: $min - $slope * math.div($from, 100);
    font-size: clamp(#{$min}, calc(#{$intercept} + #{$slope}vw), #{$max});
  }
}

/* главный миксин */
@mixin type($name) {
  /* токены: все параметры сразу */
  $types: (
    h1: (min: 32px, max: 56px, lh: 1.15, weight: 700, ls: -0.01em),
    h2: (min: 24px, max: 40px, lh: 1.2,  weight: 600),
    h3: (min: 20px, max: 32px, lh: 1.25, weight: 600),
    body: (min: 14px, max: 16px, lh: 1.6, weight: 400),
    small: (min: 12px, max: 12px, lh: 1.35, weight: 400)
  );

  $conf: map-get($types, $name);
  @if $conf == null {
    @error "Unknown type token `#{$name}`";
  }

  $min: map-get($conf, min);
  $max: map-get($conf, max);

  @include fluid($min, $max);

  line-height: map-get($conf, lh);
  font-weight: map-get($conf, weight);
  @if map-has-key($conf, ls) {
    letter-spacing: map-get($conf, ls);
  }
}
